

// ----- SCSS - Variable ----- //

// Color

$color-primary                                                  : #061D6D; 
$color-secondary                                                : #061D6D; 
$color-tertiary                                                 : #061D6D; 
$color-quarter                                                  : #061D6D; 
$color-quinary                                                  : #061D6D; 

$color-white                                                    : #FFFFFF;
$color-black                                                    : #282828;
$color-grey-super-light                                         : #E4E7EA;
$color-grey-light                                               : #8B8B8B;
$color-grey                                                     : #3B3F48;

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

// -------------------- Ascending -------------------- //

@mixin _assert-ascending($map, $map-name) {
    $prev-key: null;
    $prev-num: null;

    @each $key, $num in $map {
        @if $prev-num == null {
            // Do nothing
        }
        @else if not comparable($prev-num, $num) {
            @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
        }
        @else if $prev-num >= $num {
            @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
        }

        $prev-key: $key;
        $prev-num: $num;
    }
}

// Starts at zero
// Another grid mixin that ensures the min-width of the lowest breakpoint starts at 0.
@mixin _assert-starts-at-zero($map) {
    $values: map-values($map);
    $first-value: nth($values, 1);

    @if $first-value != 0 {
        @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
    }
}

// -------------------- Grid Breakpoint -------------------- //

$grid-breakpoints: ( xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px ) !default;

@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints);

// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
    $n: index($breakpoint-names, $name);
    @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
    $min: map-get($breakpoints, $name);
    @return if($min != 0, $min, null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.02px
// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767.98px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
    $next: breakpoint-next($name, $breakpoints);
    @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
    @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);

    @if $min {
        @media (min-width: $min) {
            @content;
        }
    }
    @else {
        @content;
    }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
    $max: breakpoint-max($name, $breakpoints);

    @if $max {
        @media (max-width: $max) {
            @content;
        }
    }
    @else {
        @content;
    }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($lower, $breakpoints);
    $max: breakpoint-max($upper, $breakpoints);

    @if $min != null and $max != null {
        @media (min-width: $min) and (max-width: $max) {
            @content;
        }
    }
    @else if $max == null {
        @include media-breakpoint-up($lower, $breakpoints) {
            @content;
        }
    }
    @else if $min == null {
        @include media-breakpoint-down($upper, $breakpoints) {
            @content;
        }
    }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    $max: breakpoint-max($name, $breakpoints);

    @if $min != null and $max != null {
        @media (min-width: $min) and (max-width: $max) {
            @content;
        }
    }
    @else if $max == null {
        @include media-breakpoint-up($name, $breakpoints) {
            @content;
        }
    }
    @else if $min == null {
        @include media-breakpoint-down($name, $breakpoints) {
            @content;
        }
    }
}



// -------------------- Map Deep Get -------------------- //

@function map-deep-get($map, $keys...) {
    @each $key in $keys {
        $map: map-get($map, $key);
    }

    @return $map;
}

// -------------------- Map Deep Set -------------------- //

@function map-deep-set($map, $keys... /*, $value */ ) {
    $map-list: ($map,);
    $result: null;

    @if length($keys) == 2 {
        @return map-merge($map, (nth($keys, 1): nth($keys, -1)));
    }

    @for $i from 1 through length($keys) - 2 {
        $map-list: append($map-list, map-get(nth($map-list, -1), nth($keys, $i)));
    }

    @for $i from length($map-list) through 1 {
        $result: map-merge(nth($map-list, $i), (nth($keys, $i): if($i == length($map-list), nth($keys, -1), $result)));
    }

    @return $result;
}

// -------------------- Column Properties -------------------- //

@mixin column-properties() {
    position            : relative;
    width               : 100%;
    min-height          : 1%;

    padding             : 0 calc(15 / var(--vw) * var(--multiplier));
}

// -------------------- Column -------------------- //

@mixin col-12() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 100%;
            flex        : 0 0 100%;

    max-width           : 100%;
}

@mixin col-11() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 91.66667%;
            flex        : 0 0 91.66667%;

    max-width           : 91.66667%;
}

@mixin col-10() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 83.33333%;
            flex        : 0 0 83.33333%;

    max-width           : 83.33333%;
}

@mixin col-9() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 75%;
            flex        : 0 0 75%;

    max-width           : 75%;
}

@mixin col-8() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 66.66667%;
            flex        : 0 0 66.66667%;

    max-width           : 66.66667%;
}

@mixin col-7() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 58.33333%;
            flex        : 0 0 58.33333%;

    max-width           : 58.33333%;
}

@mixin col-6() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 50%;
            flex        : 0 0 50%;

    max-width           : 50%;
}

@mixin col-5() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 41.66667%;
            flex        : 0 0 41.66667%;

    max-width           : 41.66667%;
}

@mixin col-4() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 33.33333%;
            flex        : 0 0 33.33333%;

    max-width           : 33.33333%;
}

@mixin col-3() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 25%;
            flex        : 0 0 25%;

    max-width           : 25%;
}

@mixin col-2() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 16.66667%;
            flex        : 0 0 16.66667%;

    max-width           : 16.66667%;
}

@mixin col-1() {
    @include column-properties;

    -webkit-box-flex    : 0;
        -ms-flex        : 0 0 8.33333%;
            flex        : 0 0 8.33333%;

    max-width           : 8.33333%;
}

// -------------------- Container -------------------- //

@mixin container() {
    width               : 100%;

    margin              : 0rem auto 0rem auto;

    @include media-breakpoint-down(sm) {
        padding         : 1rem 1rem 1rem 1rem;
        max-width: 500px;
    }

    @include media-breakpoint-down(md) {
        padding         : 2.5rem 1rem 2.5rem 1rem;
        max-width: 740px;
    }

    @include media-breakpoint-up(lg) {
        padding         : 2.5rem 1rem 2.5rem 1rem;
        max-width: 1140px;
    }
}

// -------------------- Container Fluid -------------------- //

@mixin container-fluid() {
    width               : 100%;
    max-width           : 100%;

    margin              : 0rem auto 0rem auto;
    padding             : 0rem 1rem 0rem 1rem;

}

// -------------------- Row -------------------- //

@mixin row() {
    display             : -webkit-box;
    display             : -ms-flexbox;
    display             : flex;

    -ms-flex-wrap       : wrap;
    flex-wrap           : wrap;

    margin              : 0rem -1rem 0rem -1rem;
}

// -------------------- Font Weight -------------------- //

@mixin font-black() {
    font-weight         : var(--font-weight-black);
}

@mixin font-extrabold() {
    font-weight         : var(--font-weight-extrabold);
}

@mixin font-bold() {
    font-weight         : var(--font-weight-bold);
}

@mixin font-semibold() {
    font-weight         : var(--font-weight-semibold);
}

@mixin font-medium() {
    font-weight         : var(--font-weight-medium);
}

@mixin font-regular() {
    font-weight         : var(--font-weight-regular);
}

@mixin font-light() {
    font-weight         : var(--font-weight-light);
}

// -------------------- Font Size -------------------- //

@mixin h1() {
    font-size           : calc(var(--font-size-h1) / var(--vw) * var(--multiplier));
}

@mixin h2() {
    font-size           : calc(var(--font-size-h2) / var(--vw) * var(--multiplier));
}

@mixin h3() {
    font-size           : calc(var(--font-size-h3) / var(--vw) * var(--multiplier));
}

@mixin h4() {
    font-size           : calc(var(--font-size-h4) / var(--vw) * var(--multiplier));
}

@mixin h5() {
    font-size           : calc(var(--font-size-h5) / var(--vw) * var(--multiplier));
}

@mixin h6() {
    font-size           : calc(var(--font-size-h6) / var(--vw) * var(--multiplier));
}

@mixin p() {
    font-size           : calc(var(--font-size-p) / var(--vw) * var(--multiplier));
}

@mixin small() {
    font-size           : calc(var(--font-size-small) / var(--vw) * var(--multiplier));
}

@mixin smallest() {
    font-size           : calc(var(--font-size-smallest) / var(--vw) * var(--multiplier));
}

// -------------------- Decoration -------------------- //

@mixin text-decoration-dashed() {
    text-decoration: dashed;
}

@mixin text-decoration-dotted() {
    text-decoration: dotted;
}

@mixin text-decoration-double() {
    text-decoration: double;
}

@mixin text-decoration-line-through() {
    text-decoration: line-through;
}

@mixin text-decoration-none() {
    text-decoration: none;
}

@mixin text-decoration-overline() {
    text-decoration: overline;
}

@mixin text-decoration-solid() {
    text-decoration: solid;
}

@mixin text-decoration-underline() {
    text-decoration: underline;
}

@mixin text-decoration-wavy() {
    text-decoration: wavy;
}

// -------------------- Transform -------------------- //

@mixin text-transform-capitalize() {
    text-transform: capitalize;
}

@mixin text-transform-full-width() {
    text-transform: full-width;
}

@mixin text-transform-fullsize-kana() {
    text-transform: fullsize-kana;
}

@mixin text-transform-lowercase() {
    text-transform: lowercase;
}

@mixin text-transform-none() {
    text-transform: none;
}

@mixin text-transform-uppercase() {
    text-transform: uppercase;
}



// -------------------- Text Align -------------------- //

@mixin text-align-center() {
    text-align: center;
}

@mixin text-align-end() {
    text-align: end;
}

@mixin text-align-justify() {
    text-align: justify;
}

@mixin text-align-left() {
    text-align: left;
}

@mixin text-align-match-parent() {
    text-align: match-parent;
}

@mixin text-align-right() {
    text-align: right;
}

@mixin text-align-start() {
    text-align: start;
}

// -------------------- Vertical Align -------------------- //

@mixin vertical-align-auto() {
    vertical-align: auto;
}

@mixin vertical-align-baseline() {
    vertical-align: baseline;
}

@mixin vertical-align-bottom() {
    vertical-align: bottom;
}

@mixin vertical-align-middle() {
    vertical-align: middle;
}

@mixin vertical-align-sub() {
    vertical-align: sub;
}

@mixin vertical-align-super() {
    vertical-align: super;
}

@mixin vertical-align-text-bottom() {
    vertical-align: text-bottom;
}

@mixin vertical-align-text-top() {
    vertical-align: text-top;
}

@mixin vertical-align-top() {
    vertical-align: top;
}

@mixin vertical-align-use-script() {
    vertical-align: use-script;
}

// -------------------- Align Items -------------------- //

@mixin align-items-baseline() {
    align-items: baseline;
}

@mixin align-items-center() {
    align-items: center;
}

@mixin align-items-flex-end() {
    align-items: flex-end;
}

@mixin align-items-flex-start() {
    align-items: flex-start;
}

@mixin align-items-stretch() {
    align-items: stretch;
}

@mixin align-items-initial() {
    align-items: initial;
}

@mixin align-items-inherit() {
    align-items: inherit;
}

// -------------------- Align Self -------------------- //

@mixin align-self-baseline() {
    align-self: baseline;
}

@mixin align-self-center() {
    align-self: center;
}

@mixin align-self-flex-end() {
    align-self: flex-end;
}

@mixin align-self-flex-start() {
    align-self: flex-start;
}

@mixin align-self-stretch() {
    align-self: stretch;
}

@mixin align-self-initial() {
    align-self: initial;
}

@mixin align-self-inherit() {
    align-self: inherit;
}


// -------------------- Display -------------------- //

@mixin display-block() {
    display: block;
}

@mixin display-compact() {
    display: compact;
}

@mixin display-contents() {
    display: contents;
}

@mixin display-flex() {
    display: flex;
}

@mixin display-grid() {
    display: grid;
}

@mixin display-list-item() {
    display: list-item;
}

@mixin display-marker() {
    display: marker;
}

@mixin display-none() {
    display: none;
}

@mixin display-normal() {
    display: normal;
}

// -------------------- Display Inline -------------------- //

@mixin display-inline() {
    display: inline;
}

@mixin display-inline-block() {
    display: inline-block;
}

@mixin display-inline-flex() {
    display: inline-flex;
}

@mixin display-inline-grid() {
    display: inline-grid;
}

@mixin display-inline-table() {
    display: inline-table;
}

// -------------------- Display Table -------------------- //

@mixin display-table() {
    display: table;
}

@mixin display-table-caption() {
    display: table-caption;
}

@mixin display-table-cell() {
    display: table-cell;
}

@mixin display-table-column() {
    display: table-column;
}

@mixin display-table-column-group() {
    display: table-column-group;
}

@mixin display-table-footer-group() {
    display: table-footer-group;
}

@mixin display-table-header-group() {
    display: table-header-group;
}

@mixin display-table-row() {
    display: table-row;
}

@mixin display-table-row-group() {
    display: table-row-group;
}

// -------------------- Display Webkit -------------------- //

@mixin display-webkit-box() {
    display: -webkit-box;
}

@mixin display-webkit-inline-box() {
    display: -webkit-inline-box;
}

// -------------------- Ellipsis Properties -------------------- //

@mixin ellipsis-single-properties() {
    display             : block;
    overflow            : hidden;    
    text-overflow       : ellipsis;
}

@mixin ellipsis-multi-properties() {
    display             : -webkit-box;
    overflow            : hidden;    
    text-overflow       : ellipsis;
    -webkit-box-orient  : vertical;
}

// -------------------- Ellipsis -------------------- //

@mixin ellipsis-single {
    @include ellipsis-single-properties;

    white-space         : nowrap;
    -webkit-line-clamp  : 1;
}

@mixin ellipsis-double {
    @include ellipsis-multi-properties;

    white-space         : normal;
    -webkit-line-clamp  : 2;
}

@mixin ellipsis-triple {
    @include ellipsis-multi-properties;

    white-space         : normal;
    -webkit-line-clamp  : 3;
}

@mixin ellipsis-quadruple {
    @include ellipsis-multi-properties;

    white-space         : normal;
    -webkit-line-clamp  : 4;
}

// -------------------- Flex Basis -------------------- //

@mixin flex-basis-auto() {
    flex-basis: auto;
}

// -------------------- Flex Grow -------------------- //

@mixin flex-grow-single() {
    flex-grow: 1;
}

@mixin flex-grow-double() {
    flex-grow: 2;
}

@mixin flex-grow-triple() {
    flex-grow: 3;
}

@mixin flex-grow-quadruple() {
    flex-grow: 4;
}

@mixin flex-grow-initial() {
    flex-grow: initial;
}

@mixin flex-grow-inherit() {
    flex-grow: inherit;
}

@mixin flex-grow-unset() {
    flex-grow: unset;
}

// -------------------- Flex Shrink -------------------- //

@mixin flex-shrink-single() {
    flex-shrink: 1;
}

@mixin flex-shrink-double() {
    flex-shrink: 2;
}

@mixin flex-shrink-triple() {
    flex-shrink: 3;
}

@mixin flex-shrink-quadruple() {
    flex-shrink: 4;
}

@mixin flex-shrink-initial() {
    flex-shrink: initial;
}

@mixin flex-shrink-inherit() {
    flex-shrink: inherit;
}

@mixin flex-shrink-unset() {
    flex-shrink: unset;
}

// -------------------- Flex Wrap -------------------- //

@mixin flex-nowrap() {
    flex-wrap: nowrap;
}

@mixin flex-wrap() {
    flex-wrap: wrap;
}

@mixin flex-wrap-reverse() {
    flex-wrap: wrap-reverse;   
}

// -------------------- Line Clamp -------------------- //

@mixin line-clamp-1() {
    -webkit-line-clamp: 1;
}

@mixin line-clamp-2() {
    -webkit-line-clamp: 2;
}

@mixin line-clamp-3() {
    -webkit-line-clamp: 3;
}

@mixin line-clamp-4() {
    -webkit-line-clamp: 4;
}

@mixin line-clamp-5() {
    -webkit-line-clamp: 5;
}

// -------------------- Order -------------------- //

@mixin order-first() {
    order: -1 ;
}

@mixin order-last() {
    order: 13 ;
}

@mixin order-0() {
    order: 0 ;
}

@mixin order-1() {
    order: 1 ;
}

@mixin order-2() {
    order: 2 ;
}

@mixin order-3() {
    order: 3 ;
}

@mixin order-4() {
    order: 4 ;
}

@mixin order-5() {
    order: 5 ;
}

@mixin order-6() {
    order: 6 ;
}

@mixin order-7() {
    order: 7 ;
}

@mixin order-8() {
    order: 8 ;
}

@mixin order-9() {
    order: 9 ;
}

@mixin order-10() {
    order: 10 ;
}

@mixin order-11() {
    order: 11 ;
}

@mixin order-12() {
    order: 12 ;
}

@mixin order-13() {
    order: 13 ;
}


// -------------------- Overflow -------------------- //

@mixin overflow-auto() {
    overflow: auto;
}

@mixin overflow-hidden() {
    overflow: hidden;
}

@mixin overflow-no-content() {
    overflow: no-content;
}

@mixin overflow-no-display() {
    overflow: no-display;
}

@mixin overflow-scroll() {
    overflow: scroll;
}

@mixin overflow-visible() {
    overflow: visible;
}

// -------------------- Overflow X -------------------- //

@mixin overflow-x-auto() {
    overflow-x: auto;
}

@mixin overflow-x-hidden() {
    overflow-x: hidden;
}

@mixin overflow-x-no-content() {
    overflow-x: no-content;
}

@mixin overflow-x-no-display() {
    overflow-x: no-display;
}

@mixin overflow-x-scroll() {
    overflow-x: scroll;
}

@mixin overflow-x-visible() {
    overflow-x: visible;
}

// -------------------- Overflow Y -------------------- //

@mixin overflow-y-auto() {
    overflow-y: auto;
}

@mixin overflow-y-hidden() {
    overflow-y: hidden;
}

@mixin overflow-y-no-content() {
    overflow-y: no-content;
}

@mixin overflow-y-no-display() {
    overflow-y: no-display;
}

@mixin overflow-y-scroll() {
    overflow-y: scroll;
}

@mixin overflow-y-visible() {
    overflow-y: visible;
}

// -------------------- Text Overflow -------------------- //

@mixin text-overflow-clip() {
    text-overflow: clip;
}

@mixin text-overflow-ellipsis() {
    text-overflow: ellipsis;
}

// -------------------- Position -------------------- //

@mixin position-absolute() {
    position: absolute;
}

@mixin position-center() {
    position: center;
}

@mixin position-fixed() {
    position: fixed;
}

@mixin position-page() {
    position: page;
}

@mixin position-relative() {
    position: relative;
}

@mixin position-static() {
    position: static;
}

@mixin position-sticky() {
    position: sticky;
}

@mixin position-unset() {
    position: unset;
}

// -------------------- Width -------------------- //

@mixin width-auto() {
    width: auto !important;
}

@mixin width-100() {
    width: 100% !important;
}

@mixin min-width-1() {
    min-width: 1% !important;
}

@mixin max-width-100() {
    max-width: 100% !important;
}

// -------------------- Height -------------------- //

@mixin height-auto() {
    height: auto !important;
}

@mixin height-100() {
    height: 100% !important;
}

@mixin min-height-1() {
    min-height: 1% !important;
}

@mixin max-height-100() {
    max-height: 100% !important;
}


// -------------------- Padding -------------------- //

@mixin p-0() {
    padding: 0 !important;
}

@mixin p-1() {
    padding: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin p-2() {
    padding: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin p-3() {
    padding: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin p-4() {
    padding: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin p-5() {
    padding: calc(35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Padding Right -------------------- //

@mixin pr-0() {
    padding-right: 0 !important;
}

@mixin pr-1() {
    padding-right: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin pr-2() {
    padding-right: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin pr-3() {
    padding-right: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin pr-4() {
    padding-right: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin pr-5() {
    padding-right: calc(35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Padding Left -------------------- //

@mixin pl-0() {
    padding-left: 0 !important;
}

@mixin pl-1() {
    padding-left: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin pl-2() {
    padding-left: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin pl-3() {
    padding-left: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin pl-4() {
    padding-left: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin pl-5() {
    padding-left: calc(35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Padding Top -------------------- //

@mixin pt-0() {
    padding-top: 0 !important;
}

@mixin pt-1() {
    padding-top: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin pt-2() {
    padding-top: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin pt-3() {
    padding-top: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin pt-4() {
    padding-top: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin pt-5() {
    padding-top: calc(35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Padding Bottom -------------------- //

@mixin pb-0() {
    padding-bottom: 0 !important;
}

@mixin pb-1() {
    padding-bottom: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin pb-2() {
    padding-bottom: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin pb-3() {
    padding-bottom: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin pb-4() {
    padding-bottom: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin pb-5() {
    padding-bottom: calc(35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Padding X Axis -------------------- //

@mixin px-0() {
    padding-left: 0 !important;
    padding-right: 0 !important;
}

@mixin px-1() {
    padding-left: calc(5 / var(--vw) * var(--multiplier)) !important;
    padding-right: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin px-2() {
    padding-left: calc(10 / var(--vw) * var(--multiplier)) !important;
    padding-right: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin px-3() {
    padding-left: calc(15 / var(--vw) * var(--multiplier)) !important;
    padding-right: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin px-4() {
    padding-left: calc(20 / var(--vw) * var(--multiplier)) !important;
    padding-right: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin px-5() {
    padding-left: calc(35 / var(--vw) * var(--multiplier)) !important;
    padding-right: calc(35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Padding Y Axis -------------------- //

@mixin py-0() {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
}

@mixin py-1() {
    padding-top: calc(5 / var(--vw) * var(--multiplier)) !important;
    padding-bottom: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin py-2() {
    padding-top: calc(10 / var(--vw) * var(--multiplier)) !important;
    padding-bottom: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin py-3() {
    padding-top: calc(15 / var(--vw) * var(--multiplier)) !important;
    padding-bottom: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin py-4() {
    padding-top: calc(20 / var(--vw) * var(--multiplier)) !important;
    padding-bottom: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin py-5() {
    padding-top: calc(35 / var(--vw) * var(--multiplier)) !important;
    padding-bottom: calc(35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Margin -------------------- //

@mixin m-auto() {
    margin: auto !important;
}

@mixin m-0() {
    margin: 0 !important;
}

@mixin m-1() {
    margin: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin m-2() {
    margin: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin m-3() {
    margin: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin m-4() {
    margin: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin m-5() {
    margin: calc(35 / var(--vw) * var(--multiplier)) !important;
}

@mixin m-minus-1() {
    margin: calc(-5 / var(--vw) * var(--multiplier)) !important;
}

@mixin m-minus-2() {
    margin: calc(-10 / var(--vw) * var(--multiplier)) !important;
}

@mixin m-minus-3() {
    margin: calc(-15 / var(--vw) * var(--multiplier)) !important;
}

@mixin m-minus-4() {
    margin: calc(-20 / var(--vw) * var(--multiplier)) !important;
}

@mixin m-minus-5() {
    margin: calc(-35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Margin Right -------------------- //

@mixin mr-auto() {
    margin-right: auto !important;
}

@mixin mr-0() {
    margin-right: 0 !important;
}

@mixin mr-1() {
    margin-right: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin mr-2() {
    margin-right: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin mr-3() {
    margin-right: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin mr-4() {
    margin-right: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin mr-5() {
    margin-right: calc(35 / var(--vw) * var(--multiplier)) !important;
}

@mixin mr-minus-1() {
    margin-right: calc(-5 / var(--vw) * var(--multiplier)) !important;
}

@mixin mr-minus-2() {
    margin-right: calc(-10 / var(--vw) * var(--multiplier)) !important;
}

@mixin mr-minus-3() {
    margin-right: calc(-15 / var(--vw) * var(--multiplier)) !important;
}

@mixin mr-minus-4() {
    margin-right: calc(-20 / var(--vw) * var(--multiplier)) !important;
}

@mixin mr-minus-5() {
    margin-right: calc(-35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Margin Left -------------------- //

@mixin ml-auto() {
    margin-left: auto !important;
}

@mixin ml-0() {
    margin-left: 0 !important;
}

@mixin ml-1() {
    margin-left: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin ml-2() {
    margin-left: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin ml-3() {
    margin-left: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin ml-4() {
    margin-left: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin ml-5() {
    margin-left: calc(35 / var(--vw) * var(--multiplier)) !important;
}

@mixin ml-minus-1() {
    margin-left: calc(-5 / var(--vw) * var(--multiplier)) !important;
}

@mixin ml-minus-2() {
    margin-left: calc(-10 / var(--vw) * var(--multiplier)) !important;
}

@mixin ml-minus-3() {
    margin-left: calc(-15 / var(--vw) * var(--multiplier)) !important;
}

@mixin ml-minus-4() {
    margin-left: calc(-20 / var(--vw) * var(--multiplier)) !important;
}

@mixin ml-minus-5() {
    margin-left: calc(-35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Margin Top -------------------- //

@mixin mt-auto() {
    margin-top: auto !important;
}

@mixin mt-0() {
    margin-top: 0 !important;
}

@mixin mt-1() {
    margin-top: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin mt-2() {
    margin-top: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin mt-3() {
    margin-top: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin mt-4() {
    margin-top: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin mt-5() {
    margin-top: calc(35 / var(--vw) * var(--multiplier)) !important;
}

@mixin mt-minus-1() {
    margin-top: calc(-5 / var(--vw) * var(--multiplier)) !important;
}

@mixin mt-minus-2() {
    margin-top: calc(-10 / var(--vw) * var(--multiplier)) !important;
}

@mixin mt-minus-3() {
    margin-top: calc(-15 / var(--vw) * var(--multiplier)) !important;
}

@mixin mt-minus-4() {
    margin-top: calc(-20 / var(--vw) * var(--multiplier)) !important;
}

@mixin mt-minus-5() {
    margin-top: calc(-35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Margin Bottom -------------------- //

@mixin mb-auto() {
    margin-bottom: auto !important;
}

@mixin mb-0() {
    margin-bottom: 0 !important;
}

@mixin mb-1() {
    margin-bottom: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin mb-2() {
    margin-bottom: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin mb-3() {
    margin-bottom: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin mb-4() {
    margin-bottom: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin mb-5() {
    margin-bottom: calc(35 / var(--vw) * var(--multiplier)) !important;
}

@mixin mb-minus-1() {
    margin-bottom: calc(-5 / var(--vw) * var(--multiplier)) !important;
}

@mixin mb-minus-2() {
    margin-bottom: calc(-10 / var(--vw) * var(--multiplier)) !important;
}

@mixin mb-minus-3() {
    margin-bottom: calc(-15 / var(--vw) * var(--multiplier)) !important;
}

@mixin mb-minus-4() {
    margin-bottom: calc(-20 / var(--vw) * var(--multiplier)) !important;
}

@mixin mb-minus-5() {
    margin-bottom: calc(-35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Margin X Axis -------------------- //

@mixin mx-auto() {
    margin-left: auto !important;
    margin-right: auto !important;
}

@mixin mx-0() {
    margin-left: 0 !important;
    margin-right: 0 !important;
}

@mixin mx-1() {
    margin-left: calc(5 / var(--vw) * var(--multiplier)) !important;
    margin-right: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin mx-2() {
    margin-left: calc(10 / var(--vw) * var(--multiplier)) !important;
    margin-right: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin mx-3() {
    margin-left: calc(15 / var(--vw) * var(--multiplier)) !important;
    margin-right: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin mx-4() {
    margin-left: calc(20 / var(--vw) * var(--multiplier)) !important;
    margin-right: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin mx-5() {
    margin-left: calc(35 / var(--vw) * var(--multiplier)) !important;
    margin-right: calc(35 / var(--vw) * var(--multiplier)) !important;
}

@mixin mx-minus-1() {
    margin-left: calc(-5 / var(--vw) * var(--multiplier)) !important;
    margin-right: calc(-5 / var(--vw) * var(--multiplier)) !important;
}

@mixin mx-minus-2() {
    margin-left: calc(-10 / var(--vw) * var(--multiplier)) !important;
    margin-right: calc(-10 / var(--vw) * var(--multiplier)) !important;
}

@mixin mx-minus-3() {
    margin-left: calc(-15 / var(--vw) * var(--multiplier)) !important;
    margin-right: calc(-15 / var(--vw) * var(--multiplier)) !important;
}

@mixin mx-minus-4() {
    margin-left: calc(-20 / var(--vw) * var(--multiplier)) !important;
    margin-right: calc(-20 / var(--vw) * var(--multiplier)) !important;
}

@mixin mx-minus-5() {
    margin-left: calc(-35 / var(--vw) * var(--multiplier)) !important;
    margin-right: calc(-35 / var(--vw) * var(--multiplier)) !important;
}

// -------------------- Margin Y Axis -------------------- //

@mixin my-auto() {
    margin-top: auto !important;
    margin-bottom: auto !important;
}

@mixin my-0() {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
}

@mixin my-1() {
    margin-top: calc(5 / var(--vw) * var(--multiplier)) !important;
    margin-bottom: calc(5 / var(--vw) * var(--multiplier)) !important;
}

@mixin my-2() {
    margin-top: calc(10 / var(--vw) * var(--multiplier)) !important;
    margin-bottom: calc(10 / var(--vw) * var(--multiplier)) !important;
}

@mixin my-3() {
    margin-top: calc(15 / var(--vw) * var(--multiplier)) !important;
    margin-bottom: calc(15 / var(--vw) * var(--multiplier)) !important;
}

@mixin my-4() {
    margin-top: calc(20 / var(--vw) * var(--multiplier)) !important;
    margin-bottom: calc(20 / var(--vw) * var(--multiplier)) !important;
}

@mixin my-5() {
    margin-top: calc(35 / var(--vw) * var(--multiplier)) !important;
    margin-bottom: calc(35 / var(--vw) * var(--multiplier)) !important;
}

@mixin my-minus-1() {
    margin-top: calc(-5 / var(--vw) * var(--multiplier)) !important;
    margin-bottom: calc(-5 / var(--vw) * var(--multiplier)) !important;
}

@mixin my-minus-2() {
    margin-top: calc(-10 / var(--vw) * var(--multiplier)) !important;
    margin-bottom: calc(-10 / var(--vw) * var(--multiplier)) !important;
}

@mixin my-minus-3() {
    margin-top: calc(-15 / var(--vw) * var(--multiplier)) !important;
    margin-bottom: calc(-15 / var(--vw) * var(--multiplier)) !important;
}

@mixin my-minus-4() {
    margin-top: calc(-20 / var(--vw) * var(--multiplier)) !important;
    margin-bottom: calc(-20 / var(--vw) * var(--multiplier)) !important;
}

@mixin my-minus-5() {
    margin-top: calc(-35 / var(--vw) * var(--multiplier)) !important;
    margin-bottom: calc(-35 / var(--vw) * var(--multiplier)) !important;
}


// -------------------- White Space -------------------- //

@mixin white-space-normal() {
    white-space: normal;
}

@mixin white-space-nowrap() {
    white-space: nowrap;
}

@mixin white-space-pre() {
    white-space: pre;
}

@mixin white-space-pre-line() {
    white-space: pre-line;
}

@mixin white-space-pre-wrap() {
    white-space: pre-wrap;
}

